# Script para Setup Completo do Servidor
#!/bin/bash

set -e

DOMAIN="$1"
EMAIL="$2"

if [ -z "$DOMAIN" ] || [ -z "$EMAIL" ]; then
    echo "‚ùå Uso: $0 <dominio> <email>"
    echo "   Exemplo: $0 production.example.com devops@example.com"
    exit 1
fi

echo "üöÄ Configurando servidor de produ√ß√£o..."
echo "   Dom√≠nio: $DOMAIN"
echo "   Email: $EMAIL"

# 1. Verificar depend√™ncias
echo "üîç Verificando depend√™ncias do servidor..."
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker n√£o est√° instalado. Execute:"
    echo "   curl -fsSL https://get.docker.com | sh"
    exit 1
fi

if ! command -v docker-compose &> /dev/null && ! docker compose version &> /dev/null; then
    echo "‚ùå Docker Compose n√£o est√° instalado"
    exit 1
fi

echo "‚úÖ Docker instalado: $(docker --version)"
echo "‚úÖ Docker Compose dispon√≠vel"

# 2. Criar configura√ß√£o base do servidor
echo "üèóÔ∏è  Criando configura√ß√£o base do servidor..."
./harborctl init-server --domain "$DOMAIN" --email "$EMAIL"

if [ ! -f "server-base.yml" ]; then
    echo "‚ùå Falha ao criar server-base.yml"
    exit 1
fi

echo "‚úÖ Configura√ß√£o base criada: server-base.yml"

# 3. Deploy da infraestrutura base
echo "üö¢ Fazendo deploy da infraestrutura base..."
./harborctl up -f server-base.yml

if [ $? -eq 0 ]; then
    echo "‚úÖ Infraestrutura base deployada com sucesso!"
else
    echo "‚ùå Falha no deploy da infraestrutura base"
    exit 1
fi

# 4. Aguardar servi√ßos ficarem prontos
echo "‚è≥ Aguardando servi√ßos ficarem prontos..."
sleep 30

# 5. Verificar se servi√ßos est√£o rodando
echo "üîç Verificando status dos servi√ßos..."
docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"

# 6. Testar conectividade
echo "üåê Testando conectividade..."

# Testar Traefik
if curl -k -f https://$DOMAIN > /dev/null 2>&1; then
    echo "‚úÖ Traefik respondendo em https://$DOMAIN"
else
    echo "‚ö†Ô∏è  Traefik ainda n√£o est√° respondendo (pode levar alguns minutos para certificados)"
fi

# Testar Dozzle
if curl -k -f https://logs.$DOMAIN > /dev/null 2>&1; then
    echo "‚úÖ Dozzle dispon√≠vel em https://logs.$DOMAIN"
else
    echo "‚ö†Ô∏è  Dozzle ainda n√£o est√° respondendo"
fi

# Testar Beszel
if curl -k -f https://monitor.$DOMAIN > /dev/null 2>&1; then
    echo "‚úÖ Beszel dispon√≠vel em https://monitor.$DOMAIN"
else
    echo "‚ö†Ô∏è  Beszel ainda n√£o est√° respondendo"
fi

echo ""
echo "üéâ Servidor configurado com sucesso!"
echo ""
echo "üìä Pain√©is dispon√≠veis:"
echo "   ‚Ä¢ Logs: https://logs.$DOMAIN"
echo "   ‚Ä¢ Monitor: https://monitor.$DOMAIN"
echo ""
echo "üì¶ Para deployar microservi√ßos:"
echo "   harborctl deploy-service --service <nome-servico> --repo <url-repo>"
echo ""
echo "üîß Configura√ß√µes criadas:"
echo "   ‚Ä¢ server-base.yml - Configura√ß√£o da infraestrutura base"
echo "   ‚Ä¢ .deploy/ - Arquivos de deploy gerados"
echo ""
echo "‚ö†Ô∏è  Notas importantes:"
echo "   1. Certificados TLS podem levar alguns minutos para serem emitidos"
echo "   2. DNS deve estar apontando para este servidor"
echo "   3. Portas 80 e 443 devem estar liberadas no firewall"
echo "   4. Esta configura√ß√£o base deve permanecer sempre rodando"
